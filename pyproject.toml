[tool.poetry]
name = "food-co2-estimator"
version = "0.3.5"
description = "Repository for estimating CO2 emission from the ingredient list of recipies"
authors = ["Tue Thomsen"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
langchain = "^0.3.5"
langdetect = "^1.0.9"
validators = "^0.21.2"
bs4 = "^0.0.1"
openai = "^1.52.0"
langchain-community = "^0.3.3"
langchain-openai = "^0.3.24"
pydantic = "^2.9.2"
langchain-chroma = "^0.1.4"
markdownify = "^0.14.1"
google-cloud-storage = "^3.0.0"
uvicorn = "^0.34.1"
fastapi = "^0.115.12"
redis = "^5.2.1"
langchain-google-genai = "^2.1.5"
aiohttp = "^3.12.13"
lxml = "^5.4.0"
python-dotenv = "^1.1.1"
pandas = "^2.0.3"


[tool.poetry.group.dev]
optional = true
[tool.poetry.group.dev.dependencies]
punch-py = "^2.0.0"
make = "^0.1.6.post2"
ipykernel = "^6.29.5"
ruff = "^0.8.5"
openpyxl = "^3.1.2"
tqdm = "^4.67.0"

[tool.poetry.group.test]
optional = true
[tool.poetry.group.test.dependencies]
ruff = "^0.8.5"
pyright = "^1.1.391"
pytest = "^8.3.4"
pytest-cov = "^4.0.0"
pytest-mock = "^3.14.0"
pytest-asyncio = "^0.25.2"
pytest-xdist = "^3.6.1"
asgi-lifespan = "^2.1.0"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
exclude = [".git", ".venv", "__pycache__", "*.ipynb"]
line-length = 88
target-version = "py313"
lint.fixable = ["ALL"]

[tool.pyright]
exclude = ["**/__pycache__", ".venv", "**/.git/**"]
typeCheckingMode = "basic"
useLibraryCodeForTypes = true
reportMissingTypeStubs = false
reportUnknownVariableType = false

[tool.pytest.ini_options]
addopts = "-vv -n auto -x"
testpaths = ["tests"]
pythonpath = [".", "tests"]
filterwarnings = [
    "ignore::DeprecationWarning:pydantic.*:",
    "ignore::DeprecationWarning:bs4.builder._lxml",
    "ignore::RuntimeWarning:google_crc32c.*:",                                                                                                           # Added to ignore the specific warning
    "ignore::RuntimeWarning:google_crc32c.__init__:29",                                                                                                  # Ignore the specific warning line
    "ignore:As the c extension couldn't be imported, `google-crc32c` is using a pure python implementation that is significantly slower:RuntimeWarning",
]
asyncio_default_fixture_loop_scope = "function"
